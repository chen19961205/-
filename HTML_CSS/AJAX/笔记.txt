传统网站中存在的问题
1.网速慢的情况下，页面加载时间长
2. 表单提交后，一项不合格刷新就要重填写
3.页面跳转需要重新加载页面，资源浪费，增加用户等待时间

ajax概述
他是浏览器提供的一套方法，可以实现页面无刷新的修改数据，提高用户浏览网站应用的体验

应用场景
1.页面下拉无刷新就可以加载更多数据
2.数据分页中，当用户从第一页切换到第二页中，再切换回来
3.表单提交后不用重新填写信息
4.搜索框提示文字下拉列表


ajax概述运行原理
在服务器和浏览器之间可以相当于缓冲区一样，开发人员对于请求和响应是可控的

实现步骤
1.创建ajax对象 XMLhttpRequest
2.指明请求方法和请求地址 xhr.open(方法，地址)
3.发送请求 send()
4.获取服务器端和客户端的响应数据 xhr.onload


ajax中 get请求参数要自己拼接放在xhr的open的第二个参数里
get请求是不能提交json对象数据格式的，传统网站的提交也是不支持json对象数据格式的
post请求要放在send()里面，post必须严格设置请求参数的内容类型Content-Type类型
post请求参数类型除了x-www-form-urlencoded，数据1=数值&数据2=数值
还有json数据格式

请求参数传递中必须以字符串的方式传递，所有json格式要转换为字符串格式再send

获取服务器端的响应--ajax状态码 xhr.readyState获取状态码
在创建ajax对象，配置ajax对象，发送请求，接收请求，以及接受完服务器端请求后都有对应的ajax状态码
0请求未初始化(已经创建ajax对象，还未调用open)
1请求已经建立，但是还未发送（调用open方法完成配置，但是还没调用send）
2请求已经发送，send调用了
3请求正在处理中，通常响应中已经有部分数据了，服务器已经发回来部分数值在处理了
4响应已经完成，可以获取并使用服务器的响应了，客户端已经可以使用响应数据

xhr.onload :不兼容ie低版本  不需要判断ajax状态码，调用一次
xhr.onreadStatechange:兼容ie低版本 需要判断ajax状态码 调用多次(5)

xhr.status表示http状态码。
1.网络畅通，s返回不是预期值时，自己设置状态码并且返回
2.网络畅通，s没收到请求，返回404--自己检查请求地址是否出差错
3.网络畅通，s能接受请求但是返回500状态码，--s端出错，找后端程序员沟通
4.网络中断，请求无法到达s，这时候不会触发xhr的onload事件，但是会触发onerror事件
http状态码是请求处理结果，是s返回的
ajax状态码是表示请求过程状态，是ajax对象返回的


ajax在ie低版本中缓存问题
例如读取文件中某个数据，当文件中数据人为修改了后，ajax获取的数值可能不会发生变化
(因为会直接读取浏览器缓存，不会向服务器发请求)
解决方式：再html页面也就是客户端 open的第二参数请求地址后设置随机参数解决问题

ajax封装
问题：发送一次请求代码过多，发送多次请求代码冗余且重复
解决方案：将请求代码封装到函数中，当请求时直接调用函数即可

参数覆盖 Object.assign();
 // 使用options中的属性覆盖defaults中的属性
    Object.assign(defaults, options);

formdata
解决问题:当使用ajax请求参数，并且参数比较多的时候，获取与参数值拼接很麻烦
作用：将form表单元素的name与value进行组合，实现表单数据的序列化，从而减少表单元素的拼接，提高工作效率
      异步上传二进制文件